import argparse
import logging
import importlib.resources as resources



from pcalf.core import log
from pcalf.core import HarleyDB
from pcalf.report import render

def get_args():
    parser = argparse.ArgumentParser(
        description="""
    pcalf-report
    produce an html report from the sqlite3 db file produced by pcalf-annotate-workflow
    """,
        formatter_class= argparse.RawTextHelpFormatter
    )
    parser.add_argument("--db", required=True, help="Sqlite3 file produced by pcalf-annotate-workflow")
    parser.add_argument("--out", required=True, help="Output file")

def main(): 
    args = get_args()
    console = logging.StreamHandler()
    console.setLevel(logging.INFO)
    console.setFormatter(log.CustomFormatter())
    logging.addHandler(
        console
    )
    if not HarleyDB.HarleyDB(args.db).is_schema_valid():
        logging.error("Current database schema is different from the schema of the database you provide.")
        exit(-1)

    templatedir = resources.files(render.__package__)    
    render.render(args.db,
                  templatedir,
                  args.out)

